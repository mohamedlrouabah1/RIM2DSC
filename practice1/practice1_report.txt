# Compte rendu du TP1 de RI 


## Exercice 1

Incidence matrix : 	
-----------------									
Term	    D0	D1	D2	D3	D4	D5	D6	D7	D8	D9
citizen	    1	0	0	0	0	0	0	0	0	0
kane	    1	0	0	0	0	0	0	0	0	0
casablanca	0	1	0	0	0	0	0	0	0	0
the	        0	0	1	1	0	1	1	1	0	1
godfather	0	0	1	0	0	0	0	0	0	0
gone	    0	0	0	1	0	0	0	0	0	0
with	    0	0	0	1	0	0	0	0	0	0
wind	    0	0	0	1	0	0	0	0	0	0
lawrence	0	0	0	0	1	0	0	0	0	0
of	        0	0	0	0	1	1	0	0	0	0
arabia	    0	0	0	0	1	0	0	0	0	0
wizard	    0	0	0	0	0	1	0	0	0	0
oz	        0	0	0	0	0	1	0	0	0	0
graduate	0	0	0	0	0	0	1	0	0	0
on	        0	0	0	0	0	0	0	1	0	0
waterfront	0	0	0	0	0	0	0	1	0	0
schindlers	0	0	0	0	0	0	0	0	1	0
list	    0	0	0	0	0	0	0	0	1	0
singin      0   0   0   0   0   0   0   0   0   1
in          0   0   0   0   0   0   0   0   0   1
rain        0   0   0   0   0   0   0   0   0   1

Explanations : 
1. We build the dictionnay of our text by selecting each
    unique word of it.
2. We standardize the dictionnary words by putting all
    of them in lowercase and removing special characters 
    (more specifically accents).
3. Finaly we make a matrix with the words of the dictionnary
    indexing the lines and the documents id indexing the columns.
4. for each cell in our matrix we have the value
    - 1 if the word indexing the row of the cell is int the 
        document which document if indexing the column of the cell.


Inverted Index : 
----------------		
Term	   Freq    Postings List
citizen	    1	    D0
kane	    1	    D0
casablanca	1	    D1
the	        6	    D2, D3, D5, D6, D7, D9
godfather	1	    D2
gone	    1	    D3
with	    1	    D3
wind	    1	    D3
lawrence	1	    D4
of	        1	    D4
arabia	    1	    D4
wizard	    1	    D5
oz	        1	    D5
graduate	1	    D6
on	        1	    D7
waterfront	1	    D7
schindlers	1	    D8
list	    1	    D8
singin	    1	    D9
in  	    1	    D9
rain	    1	    D9

Explanations :
1. We browse each document and each time we encounter a word 
    of our dictionnary for the first time, we add the document
    id to the posting list of the word.
2. Then for each word we count the number of document id present
    in their posting list in order to get the frequency.




## Exercice 2

program path: practice1/exercice2.py
------------

output:
------
the inverted dataframe was sucessfuly created !
          Term  DF      Postings List (frequency, id document)
0         kane   1      1 D0
1      citizen   1      1 D0
2   casablanca   1      1 D1
3    godfather   1      2 D2
4          the   6      2 D2, 1 D3, 2 D5, 1 D6, 1 D7, 1 D9
5         wind   1      1 D3
6         gone   1      1 D3
7         with   1      1 D3
8       arabia   1      1 D4
9           of   2      1 D4, 2 D5
10    lawrence   1      1 D4
11      wizard   1      2 D5
12          oz   1      2 D5
13    graduate   1      1 D6
14  waterfront   1      1 D7
15          on   1      1 D7
16  schindlers   1      1 D8
17        list   1      1 D8
18        rain   1      1 D9
19          in   1      1 D9
20      singin   1      1 D9

Explanations:
------------
1. We parse the xml document using a python regex in order to
    get our sentences.
2. We normalize our data by using a buildin python function to 
    lower case each word in sentences and an over regex to 
    delete special characters.
3. We then iterate over each sentences to build the inverted 
    indexing and compute the frequency of each word.
4. For the representation of the inverted index we have chosen
    a python dictionnay with the word as key and a list of 
    document id as value.



## Exercice 3
program path: practice1/exercice2.py
------------
output:
------