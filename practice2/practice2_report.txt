# Compte rendu du TP2 de RI


# Summary

To create index of a collection we chose to use python dictionnary to store the posting list.
Then we use nltk library to tokenize and stem the collection.
We also try an OOP approach by making a class for the index and the posting list that can
store more informations (the one in ex2), but it came at a cost of performance because of
the time to create the object.


## results :
Size of Collection (KB) | Time Stemmer Stop word | Time Stop word only | Time Basic
------------------------------------------------------------------------------------
                       55 KB |         0.48 sec |         0.18 sec |      0.03 sec
                       52 KB |         0.41 sec |         0.22 sec |      0.02 sec
                      103 KB |         0.86 sec |         0.32 sec |      0.10 sec
                       96 KB |         0.92 sec |         0.45 sec |      0.05 sec
                      357 KB |         3.05 sec |         1.18 sec |      0.26 sec
                      559 KB |         4.50 sec |         1.81 sec |      0.40 sec
                      747 KB |         6.39 sec |         2.42 sec |      0.60 sec
                     1200 KB |        11.78 sec |         3.85 sec |      1.19 sec
                     4200 KB |        34.13 sec |        13.99 sec |      3.71 sec
------------------------------------------------------------------------------------

in the file ./graph/IDF_Time_File_basic.txt you can find the index of one collection.

And for the plot :
 - ./graph/efficiency_and_statistics_graph_basic.png
 - ./graph/efficiency_and_statistics_graph_oop.png

## Launch program  

>python3 ./src/main.py



